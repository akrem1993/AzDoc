@using AzDoc.Helpers
@using Widgets

@{
    Layout = null;
    <style>
        button,
        [type="button"],
        [type="reset"],
        [type="submit"] {
            -webkit-appearance: none !important;
        }
    </style>
    var grid = Html.MhmGrid("gridDMS", "Document", "Document", routeValues: new { docType = SessionHelper.DocTypeId })
        .Columns(cols =>
        {
            cols.Column(c =>
            {
                c.SetText("");
                c.SetDataField("DocId", FieldType.Number);
                c.SetHeaderAlign(TextAlign.Center).IsFilterable();
                c.SetWidth(35);
                c.IsCrud("x", "x");
                c.SetRenderer("<a><i class='line'></i><i class='line'></i><i class='line'></i></a>",
                htmlAttributes: new
                {
                    @class = "operation-button",
                    data_toggle = "popover",
                    data_container = "body",
                    data_trigger = "focus",
                    data_placement = "right",
                    type = "button",
                    data_html = "true",
                    href = "#",
                    id = "ActionName",
                    fn_onclick = "GetPopoverActions"
                });
            });

            cols.Column(c =>
            {
                c.SetText("");
                c.SetDataField("", FieldType.Number);
                c.SetHeaderAlign(TextAlign.Center);
                c.SetWidth(35);
                c.IsCrud("x", "x");
                c.SetRenderer("<a><i class='fas fa-eye'></i></a>", htmlAttributes: new { @class = "operation-button", fn_onclick = "DocView" });
            });

            cols.Column(c =>
            {
                c.SetText("Qeydiyyat nömrəsi");
                c.SetDataField("DocEnterno");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("14%");
                c.IsPinned();
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("");
                c.SetDataField("DocDoctypeId");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("14%");
                c.IsFilterable();
                c.SetHidden();
            });


            cols.Column(c =>
            {
                c.SetText("Qeydiyyat tarixi");
                c.SetDataField("DocEnterdate", FieldType.Date, "dd.MM.yyyy");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("14%");
                c.IsPinned();
                c.IsFilterable(Filtertype.Date);
            });

            cols.Column(c =>
            {
                c.SetText("İcraçılar");
                c.SetDataField("SendTo");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("15%");
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Son icra müddəti");
                c.SetDataField("DocPlannedDate", FieldType.Date, "dd.MM.yyyy");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("14%");
                c.IsFilterable(Filtertype.Date);
            });

            cols.Column(c =>
            {
                c.SetText("Əməliyyatın növü");
                c.SetDataField("ExecuteRule");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("14%");
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Əməliyyatı aparan");
                c.SetDataField("CreaterPersonnelName");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("14%");
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Sənədin nömrəsi");
                c.SetDataField("DocDocno");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("14%");
                c.IsFilterable();
            });


            cols.Column(c =>
            {
                c.SetText("Sənədin tarixi");
                c.SetDataField("DocDocdate", FieldType.Date, "dd.MM.yyyy");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("14%");
                c.IsFilterable(Filtertype.Date);
            });

            cols.Column(c =>
            {
                c.SetText("Sənədin statusu");
                c.SetDataField("DocumentstatusName");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("14%");
                c.SetHidden();
                c.IsFilterable(Filtertype.CheckedList);
            });

            cols.Column(c =>
            {
                c.SetText("Təsdiq edən şəxs");
                c.SetDataField("DocConfirmer");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(300);
                c.SetMaxWidth(400);
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Mövcud status");
                c.SetDataField("DocLastOperationStatus");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(300);
                c.SetMaxWidth(400);
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Mövcud əməliyyatçı");
                c.SetDataField("DocLastOperationPerson");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(300);
                c.SetMaxWidth(400);
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Kimə ünvanlanıb");
                c.SetDataField("Signer");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("14%");
                c.IsFilterable();

            });

            cols.Column(c =>
            {
                c.SetText("Hardan daxil olub");
                c.SetDataField("DocAuthorInfo");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(200);
                c.SetMaxWidth(300);
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Kimdən daxil olub");
                c.SetDataField("WhomFromInfo");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(200);
                c.SetMaxWidth(300);
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Müəllifin məlumatları");
                c.SetDataField("EntryFromWhere");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("14%");
                c.IsFilterable();
            });


            cols.Column(c =>
            {
                c.SetText("Qısa məzmun");
                c.SetDataField("DocDescription");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetWidth("14%");
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("");
                c.SetDataField("ExecutorControlStatus");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(100);
                c.SetWidth("12.5%");
                c.SetHidden();
                c.IsFilterable(Filtertype.CheckedList);
            });

            cols.Column(c =>
            {
                c.SetText("İcra müddəti");
                c.SetDataField("ExecutionTimeout");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(100);
                c.SetMaxWidth(200);
                c.IsFilterable();
                c.SetHidden();
            });

            cols.Column(c =>
            {
                c.SetText("Executor");
                c.SetDataField("ExecutorId");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(100);
                c.SetMaxWidth(200);
                c.IsFilterable();
                c.SetHidden();
            });

        })


        .AllowCrud()
        .SetRowDoubleClick("GridRowDoubleClick")
        .AllowSorting(false)
        .AllowTooltips(false)
        .AllowPaging(true)
        .AllowFiltering(true)
        .AllowFilterRow(true)
        .AllowColumnOrdering(true)
        .AllowColumnResizing(true)
        .SetPageSize(35)
        .SetOnFilter("onFilter")
        .SetCellsClass("SetRowCell")
        .SetWidth("100%")
        .SetHeight("100%");
}


@grid.GetHtml()




@Html.Partial("~/Views/Document/_GridDocOptions.cshtml")

