@using AzDoc.Helpers


<div id="reportDiv">
    <div style="border:1px solid #18191b">
        <div class="row" style="margin:10px;text-align:center;">
            <div class="input-group mb-3">
                <div class="col-lg-1 col-md-3 d-flex align-items-center">
                    <a href="#" class="squareBtn mt-3" style="color: white" data-toggle="modal" data-target="#reportFormModal">
                        Forma
                    </a>
                </div>
                @if ((SessionHelper.OrganizationId == 1 && SessionHelper.DepartmentTopDepartmentId == -1)
                    || SessionHelper.WorkPlaceId == 24 || SessionHelper.WorkPlaceId == 43 || SessionHelper.WorkPlaceId == 44
                    || SessionHelper.WorkPlaceId == 47 || SessionHelper.WorkPlaceId == 5018
                    || SessionHelper.WorkPlaceId == 7698 || SessionHelper.WorkPlaceId == 8638 || SessionHelper.WorkPlaceId == 8660 || SessionHelper.WorkPlaceId == 9266)
                {
                    <div class="col-lg-2 col-md-5">
                        <label>Hara daxil olub</label><br />
                        <select class="selectpicker" data-width="100%" id="executorOrganizationType">
                            <option value="-1">Ümumi</option>
                            <option value="1">Nazirlik strukturu</option>
                            <option value="0">Qurumlar</option>
                        </select>
                    </div>

                }
                else
                {
                    <input type="hidden" id="executorOrganizationType" value="1" />//Bashqa qurumun strukturu
                }
                <div class="col-lg-4 col-md-7">
                    <label>Bölmə və ya şöbələr</label> <br />
                    <div class="searchSelectTree mb-3">
                        <div class="form-control">
                            <div class="span" id="dropDownDepartment">Seç</div>
                        </div>
                        <div class="downContent treeListContent">
                            <div class="down">
                                <ul id="mainContentForDepartment"></ul>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-2 col-md-4">
                    <label>Tarix</label>
                    <input style="" type="text" id="intervalDateForInExecutionDocs" daterange class="form-control " placeholder="mm.dd.yyyy">
                </div>
                <div class="col-lg-3 col-md-6">
                    <label>Gecikmə</label><br />
                    <select class="selectpicker" data-width="100%" id="remaningDay" style="">
                        <option value="-1">Bütün icrada olan sənədlər</option>
                        <option value="1">1 gün qalıb</option>
                        <option value="3">3 gün qalıb</option>
                        <option value="5">5 gün qalıb</option>
                        <option value="6">Icraatda olan</option>
                        <option value="0">Gecikib</option>
                    </select>
                </div>
            </div>
            <div class="input-group mb-3">
                <div class="col-lg-3 col-md-6">
                    <label>Sənəd növü</label><br />
                    <select class="selectpicker" data-width="100%" id="docType" style="">
                        <option value="-1">Ümumi</option>
                        <option value="1">Təşkilat müraciətləri</option>
                        <option value="2">Vətəndaş müraciətləri</option>
                        <option value="18">Xidməti məktublar</option>
                        @* <option value="4">Xaric olan sənədlər</option> *@
                        <option value="3">Sərəncamverici sənədlər</option>
                        <option value="27">Əməkdaş müraciətləri</option>
                    </select>
                </div>
                <div class="col-3 citizenDiv">
                    <div class="">
                        <label>Müraciətlərə baxılmanın vəziyyəti</label>
                        <select class="selectpicker " data-width="100%" id="docResult" data-live-search="true">
                            <option value="-1">Seç</option>
                        </select>
                    </div>
                </div>
                <div class="col-3 citizenTopicDiv" @*style="display:none;"*@>
                    <div class="">
                        <label>Mövzu</label><br />
                        <select class="selectpicker " data-width="100%" id="citizenTopicType" data-live-search="true">
                            <option value="-1">Seç</option>
                        </select>
                    </div>
                </div>
                <div class="col-3 employeeTopicBox notShowColumn">
                    <div class="">
                        <label>Mövzu</label><br />
                        <select class="selectpicker" data-width="100%" id="employeeAppealsTopicType" data-live-search="true">
                            <option value="">Seç</option>
                        </select>
                    </div>
                </div>
                <div class="col-3 citizenEmployeeDiv" @*style="display:none;"*@>
                    <div class="">
                        <label>Alt Mövzu</label><br />
                        <select class="selectpicker " data-width="100%" id="citizenTopics" data-live-search="true">
                            <option value="-1">Seç</option>
                        </select>
                    </div>
                </div>
                <div class="col-3 citizenEmployeeDiv" @*style="display:none;"*@>
                    <div class="">
                        <label>Sosial status</label><br />
                        <select class="selectpicker " data-width="100%" id="socialStatus" data-live-search="true">
                            <option value="-1">Seç</option>
                        </select>
                    </div>
                </div>
                <div class="col-3 citizenEmployeeDiv" @*style="display:none;"*@>
                    <div class="">
                        <label>Müraciətin növü</label><br />
                        <select class="selectpicker " data-width="100%" id="docApplyType" data-live-search="true">
                            <option value="-1">Seç</option>
                        </select>
                    </div>
                </div>
                <div class="col-3 citizenEmployeeDiv" @*style="display:none;"*@>
                    <div class="">
                        <label>Müraciətin forması</label><br />
                        <select class="selectpicker " data-width="100%" id="docForm" data-live-search="true">
                            <option value="-1">Seç</option>
                        </select>
                    </div>
                </div>
                <div class="col-3 citizenEmployeeDiv" @*style="display:none;"*@>
                    <div class="">
                        <label>Şikayət olunan qurum</label><br />
                        <select class="selectpicker " data-width="100%" id="docStructure" data-live-search="true">
                            <option value="-1">Seç</option>
                        </select>
                    </div>
                </div>
                <div class="col-3 citizenEmployeeDiv" @*style="display:none;"*@>
                    <div class="">
                        <label>Şikayət olunan alt qurum</label><br />
                        <select class="selectpicker " data-width="100%" id="docSubStructure" data-live-search="true">
                            <option value="-1">Seç</option>
                        </select>
                    </div>
                </div>
                <div class="col-3 citizenOrgEmployeeDiv" @*style="display:none;"*@>
                    <div class="">
                        <label>Hardan daxil olub</label>
                        <select class="selectpicker " data-width="100%" id="entryFromWhere" data-live-search="true">
                            <option value="-1">Ümumi</option>
                            <option value="1">Azərbaycan Respublikası Prezidentinin Administrasiyası </option>
                            <option value="2">Azərbaycan Respublikasının Milli Məclisi</option>
                            <option value="3">Azərbaycan Respublikasının Nazirlər Kabineti </option>
                            <option value="4">Azərbaycan Respublikasının İnsan Hüquqları üzrə Müvəkkili (Ombudsman) </option>
                            <option value="5">Azərbaycan Respublikasının Baş Prokurorluğu </option>
                            <option value="-2">Digər</option>    Yuxarida goturulen qurumlar xaric digerleri hansi ki nazirilik daxili nezere alinmayib
                            <option value="-3">Daxili (NRYTN rəhbərlik )</option>
                        </select>
                    </div>
                </div>
                <div class="col-3">
                    <div class="controlDiv" @*style="display:none;"*@>
                        <label>Nəzarət</label>
                        <select class="selectpicker " data-width="100%" id="docControlStatus">
                            <option value="-1">Ümumi</option>
                            <option value="1">Nəzarətdədir</option>
                        </select>
                    </div>
                </div>
                <div class="col-3">
                    <div class="controlStructureDiv notShowColumn">
                        <label>Nəzarətə götürən</label>
                        <select class="selectpicker " data-width="100%" id="docControlStatusStructures">
                            <option value="-1">Ümumi</option>
                            <option value="1">Azərbaycan Respublikası Prezidentinin Administrasiyası </option>
                            <option value="2">Azərbaycan Respublikasının Milli Məclisi</option>
                            <option value="3">Azərbaycan Respublikasının Nazirlər Kabineti </option>
                            <option value="4">Azərbaycan Respublikasının İnsan Hüquqları üzrə Müvəkkili (Ombudsman) </option>
                            <option value="5">Azərbaycan Respublikasının Baş Prokurorluğu </option>
                            <option value="-2">Digər</option>
                            <option value="-3">Daxili (NRYTN rəhbərlik )</option>
                        </select>
                    </div>
                </div>
                <div class="col-3 citizenDiv" @*style="display:none;"*@>
                    <div class="">
                        <label>Rayon</label><br />
                        <select class="selectpicker " data-width="100%" id="citizenRegion" data-live-search="true">
                            <option value="-1">Seç</option>
                        </select>
                    </div>
                </div>
                <div class="col-3  citizenDiv" @*style="display:none;"*@>
                    <div class="">
                        <label>Kənd</label><br />
                        <select class="selectpicker " data-width="100%" id="citizenVillage" data-live-search="true">
                            <option value="-1">Seç</option>
                        </select>
                    </div>
                </div>
                <div class="input-group mb-3">

                    <div class="col-9" style="text-align:right;">

                    </div>
                    <div class="col-3" style="text-align:right;">
                        <br />
                        <button type="button" class="mBtn mBtn-pr" style="" id="submitFilter">
                            Axtar
                        </button>
                    </div>

                </div>

            </div>
        </div>
    </div>
    <div class="row" id="reportBodyPartial" style="display:block !important;">
    </div>
    <div class="col-6 text-left mt-2">
        <div class="mBtnGroup" style="margin-bottom: 6px">
            <button type="button" class="mBtn mBtn-pr" id="excellServerSide">Excel-ə çevir</button>
            <button type="button" class="mBtn mBtn-pr" id="pdfServerSide">PDF-ə çevir</button>
        </div>
    </div>

</div>

<script>
    function getInputValuesSetToData(page = null) {

        let data;

        let intervalDate = $('#intervalDateForInExecutionDocs').val();

        let executorOrganizationType = parseInt($("#executorOrganizationType option:selected").val()); //required
        if (Object.is(executorOrganizationType, NaN))
            executorOrganizationType = parseInt($("#executorOrganizationType").val());

        let organizationDepartmentOrOrganizations = parseInt($("#dropDownDepartment").attr("data-id")); //required
        let remaningDay = parseInt($("#remaningDay option:selected").val()); //required
        let docType = parseInt($("#docType option:selected").val());

        let topicType = parseInt($("#citizenTopicType option:selected").val());
        let topicTypeEmployee = parseInt($("#employeeAppealsTopicType option:selected").val());
        let topic = parseInt($("#citizenTopics option:selected").val());

        let regions = parseInt($("#citizenRegion option:selected").val());//citizenRegion
        let villages = parseInt($("#citizenVillage option:selected").val());//citizenVillage


        let socialStatusId = parseInt($("#socialStatus option:selected").val());
        let docFormId = parseInt($("#docForm option:selected").val());

        console.log($("#socialStatus option:selected").val());
        let executor = parseInt($("#executors option:selected").val());
        let docControlStatus = parseInt($("#docControlStatus option:selected").val());
        let docControlStatusStructures = parseInt($("#docControlStatusStructures option:selected").val());
        let entryFromWhere = parseInt($("#entryFromWhere option:selected").val());

        let docApplyType = parseInt($("#docApplyType option:selected").val());

        let complainedOfDocStructure = parseInt($("#docStructure option:selected").val());
        let complainedOfDocSubStructure = parseInt($("#docSubStructure option:selected").val());

        let docResult = parseInt($("#docResult option:selected").val());

        if (page) {

            if (localStorage.getItem("InExecutionReport")) {
                data = JSON.parse(localStorage.getItem("InExecutionReport"));
                data.page = page;
            }
            else {
                data = {
                    page: page,
                    "docTypeId": docType,
                    "organizationDepartmentOrOrganizations": organizationDepartmentOrOrganizations,
                    "executorOrganizationType": executorOrganizationType,
                    "intervalDate": intervalDate,
                    "remaningDay": remaningDay,
                    "topicType": topicType,
                    "topicTypeEmployee": topicTypeEmployee,
                    "topic": topic,
                    "regions": regions,
                    "villages": villages,
                    "socialStatusId": socialStatusId,
                    "docFormId": docFormId,
                    "executor": executor,
                    "docControlStatus": docControlStatus,
                    "docControlStatusStructures": docControlStatusStructures,
                    "docApplyType": docApplyType,
                    "complainedOfDocStructure": complainedOfDocStructure,
                    "complainedOfDocSubStructure": complainedOfDocSubStructure,
                    "entryFromWhere": entryFromWhere,
                    "docResult": docResult
                }
                var dataForStorage = JSON.stringify(data);
                localStorage.setItem("InExecutionReport", dataForStorage);
            }
        }
        else {

            var objHeaders = [];
            let headers = $('#tableReportExecution th');
            for (var i = 0; i <= headers.length; i++) {
                let current = $(`#tableReportExecution th:nth-child(${i})`)[0];
                if (current != undefined && $(current).css('display') !== 'none') {
                    objHeaders.push($(`#tableReportExecution th:nth-child(${i})`).text());
                }
            }
            objHeaders = objHeaders.removeArraysElement("Qeydlər");

            if (localStorage.getItem("InExecutionReport")) {
                data = JSON.parse(localStorage.getItem("InExecutionReport"));
                data.page = page;
                data["objHeaders"] = objHeaders;
            }
            else {
                data = {
                    //page: page,
                    "objHeaders": objHeaders,
                    "docTypeId": docType,
                    "organizationDepartmentOrOrganizations": organizationDepartmentOrOrganizations,
                    "executorOrganizationType": executorOrganizationType,
                    "intervalDate": intervalDate,
                    "remaningDay": remaningDay,
                    "topicType": topicType,
                    "topicTypeEmployee": topicTypeEmployee,
                    "topic": topic,
                    "regions": regions,
                    "villages": villages,
                    "socialStatusId": socialStatusId,
                    "docFormId": docFormId,
                    "executor": executor,
                    "docControlStatus": docControlStatus,
                    "docControlStatusStructures": docControlStatusStructures,
                    "docApplyType": docApplyType,
                    "complainedOfDocStructure": complainedOfDocStructure,
                    "complainedOfDocSubStructure": complainedOfDocSubStructure,
                    "entryFromWhere": entryFromWhere,
                    "docResult": docResult
                }
            }
        }

        return data;
    }   //getting data from view
    function refreshTable(page = 1) {
        if (page) {
            var data = getInputValuesSetToData(page);
            $.ajax({
                type: "GET",
                url: urlForInExecutionDocs,
                data: data,
                cache: false,
                beforeSend: function (e) {
                    window.ShowLoading();
                },
                complete: function () {
                    window.CloseLoading();
                }, success: function (response) {
                    $('#reportBodyPartial').html(response);
                    $('.selectpicker').selectpicker('refresh');
                }
            });
        }
    }  //request for fill grid

    $('#intervalDateForInExecutionDocs').daterangepicker(datePickerParameters);

    $(document).on('click', '.btnPaging', btnPagingEvent);


    $('#citizenTopicType').change(function () { citizenTopicTypeChangeEvent(reportTypeEnum.InExecution) });
    $('#employeeAppealsTopicType').change(employeeAppealsTopicTypeChangeEvent)
    $('#citizenRegion').change(function () { citizenRegionChangeEvent(reportTypeEnum.InExecution) });
    $('#executorOrganizationType').change(executorOrganizationChangeEvent)     //fill dropdown for organizations
    $(".searchSelectTree .form-control").click(selectTreeEvent);

    $('#docStructure').change(docStructureChangeEvent);

    $('#submitFilter').click(function() {
        localStorage.removeItem("InExecutionReport");
        refreshTable();
    });

    $(document).ready(function () {
        console.log('test');
        localStorage.removeItem("InExecutionReport");
        getDropDownModel(reportTypeEnum.InExecution);
    });

    //Vetendasa aid olan filtrler
    function ShowCitizenDropDowns() {
        $('.citizenEmployeeDiv').css("display", "block");
        $('.controlDiv').css("display", "block");
        $('.citizenOrgEmployeeDiv').css("display", "block");
        $('.citizenTopicDiv').css("display", "block");
        $('.employeeTopicBox').css("display", "none");
    }

    //Teskilata aid filtrler
    function ShowOrganizationDropDowns() {
        $('.controlDiv').css("display", "block");
        $('.citizenOrgEmployeeDiv').css("display", "block");
    }

    //Emekdasa aid filtrler
    function ShowEmployeeAppealsDropDowns() {
        $('.citizenEmployeeDiv').css("display", "block");
        $('.employeeTopicBox').css("display", "block");
        SetCitizenDropDownsDefault();
        FillDropDownsForInExecution();
    }

    //Vetendasla Emekdasda olub teskilatda olmayan filtrler
    function RemoveCitizenEmployeeDropDowns() {
        $('.citizenEmployeeDiv').css("display", "none");
        $('.citizenDiv').css("display", "none");
        $('.citizenTopicDiv').css("display", "none");
        $('.employeeTopicBox').css("display", "none");
        SetControlDropDownsDefault();
        FillDropDownsForInExecution();
    }

    //Vetendasda olan filtrlerin cixarilmasi
    function RemoveCitizenRequestDropDowns() {
        $('.controlDiv').css("display", "none");
        $('.citizenDiv').css("display", "none");
        $('.citizenTopicDiv').css("display", "none");
        SetControlDropDownsDefault();
    }

    //Teskilatda olan filtrlerin cixarilmasi
    function RemoveOrganizationRequestDropDowns() {
        $('.citizenDiv').css("display", "block");
        $('.controlDiv').css("display", "block");
        SetControlDropDownsDefault();
        FillDropDownsForInExecution();
    }

    function SetCitizenDropDownsDefault() {
        $('#citizenTopicType').html('');
        $('#citizenTopics').html('');
        $('#citizenRegion').html('');
        $('#citizenVillage').html('');
        $('#socialStatus').html('');
        $('#docForm').html('');
        $('#docStructure').html('');
        $('#docSubStructure').html('');
    }
    function SetControlDropDownsDefault() {
        $('.controlStructureDiv').addClass("notShowColumn");
        document.getElementById("remaningDay").selectedIndex = "Bütün icrada olan sənədlər";
        document.getElementById("entryFromWhere").selectedIndex = "Ümumi";
        document.getElementById("docControlStatus").selectedIndex = "Ümumi";
        document.getElementById("docControlStatusStructures").selectedIndex = "Ümumi";
    }

    $('#docType').change(function () {
        let docType = parseInt($(this).val());
        switch (docType) {
            //Teskilat
            case docTypeEnum.OrganizationRequest:
                RemoveCitizenEmployeeDropDowns();
                ShowOrganizationDropDowns();
                break;

            //Vetendas
            case docTypeEnum.CitizenRequest:
                RemoveOrganizationRequestDropDowns();
                ShowCitizenDropDowns();
                break;

            //Emekdas
            case docTypeEnum.EmployeeAppeals:
                RemoveOrganizationRequestDropDowns();
                RemoveCitizenRequestDropDowns();
                ShowEmployeeAppealsDropDowns();
                break;

            //Diger
            default:
               // $('.citizenDiv').css("display", "none");
               // $('.citizenEmployeeDiv').css("display", "none");
               // $('.controlDiv').css("display", "none");
                RemoveOrganizationRequestDropDowns();
                ShowCitizenDropDowns();
               // SetCitizenDropDownsDefault();
               // SetControlDropDownsDefault();
                break;
        }
        $('.selectpicker').selectpicker('refresh');
    });

    $('#docControlStatus').change(function () {
        var changeStatus = $(this).val();
        if (changeStatus == 1) {
            if ($('.controlStructureDiv').hasClass("notShowColumn"))
                $('.controlStructureDiv').removeClass("notShowColumn");
        }
        else {
            $("#docControlStatusStructures").val(-1);
            $('.controlStructureDiv').addClass("notShowColumn");
        }
        $('.selectpicker').selectpicker("refresh");
    });

    // #region Server Side Pdf Excell

    $('#excellServerSide').on('click', function () {
        downloadFileEvent(urlForInExecutionDocsExcell, urlDownloadExcellFile)
    });
    $('#pdfServerSide').on('click', function () {
        downloadFileEvent(urlForInExecutionDocsPdf, urlDownloadPdfFile)
    });

    // #endregion

    //#region Samir Muellim note
    $(document).on('click', '.btnNotes', function () {

        let currentDocId = $(this).attr("data-id");
        let currentDocEnterno = $(this).attr("data-docEnterno");

        $('#docNoteId').val(currentDocId);
        $('#docNumber').text('Sənəd : ' + currentDocEnterno);
        $('#txtAreaNotes').val(GetNotesById(currentDocId))
        $('#docNotesModal').modal();
    })
    $('#confirmDocNotes').click(function () {
        var docNote = $('#txtAreaNotes').val();
        var docId = $('#docNoteId').val();
        SaveNote(docId, docNote)
    })

    function GetNotesById(docId) {
        PaintInfoButtons();
        var currentObj = localStorage.getItem('notes');
        let currentNote = "";
        if (currentObj != null) {

            let obj = JSON.parse(currentObj);
            if (obj[docId] != null) {
                currentNote = obj[docId];
            }
        }
        return currentNote;
    }
    function SaveNote(docId, docNote) {
        let currentObj = localStorage.getItem('notes');
        let obj = {};
        var element = $(`span.btnNotes[data-id="${parseInt(docId)}"]`);

        if (!docNote == "") {
            if (currentObj != null) {
                obj = JSON.parse(currentObj);
            }
            obj[docId] = docNote;
            element.css("color", "green");
        }
        else {
            obj = JSON.parse(currentObj);
            delete obj[docId];
            element.css("color", "dodgerblue");
        }

        localStorage.setItem('notes', JSON.stringify(obj));


    }
    function PaintInfoButtons() {

        let obj = JSON.parse(localStorage.getItem('notes'));
        if (obj != null) {
            $('.btnNotes').each(function () {
                var docId = $(this).attr("data-id");
                if (obj[docId] != null) {
                    var element = $(`span.btnNotes[data-id="${parseInt(docId)}"]`)
                    console.log(element);
                    element.css("color", "green");
                }
            })
        }
    }
    //#endregion

</script>
