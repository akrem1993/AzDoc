@model Admin.Model.ViewModel.AuthorityRelatedModel.PassAuthorityTransfer
@using AzDoc.Helpers
@using AzDoc.App_LocalResources
@using BLL.Models.Document

@{
    ViewBag.Title = "Səlahiyyətlər";
    Layout = "~/Views/Shared/_LeftMenuLayout.cshtml";
    RouteData routeData = ViewContext.RouteData;
    var routeValueDictionary = new RouteValueDictionary(routeData.Values);
    var lang = routeValueDictionary["lang"] ?? "az";
}
<link href="~/Content/jquery-editable-select/jquery-editable-select.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-editable-select/jquery-editable-select.min.js?v=@AppVersion.Version"></script>
<script src="~/Scripts/common/sweetalert.min.js?v=@AppVersion.Version"></script>
<style>
    .redBorder {
        border-color: red
    }
</style>
<form id="authorityForm" name="authorityForm">
    <div class="col-12 mainContent">
        <div class="mainEdit contentItem" id="step1" style="padding-top:1px" data-brnum="1">
            <div class="editGroup">
                <h4>Yeni səlahiyyət ötürülməsi</h4>
                <div class="row">
                    @*<input type="hidden" id="hiddenId" value="@Model.AuthorityId" />*@
                    @Html.TextBoxFor(model => model.AuthorityId, new
                    {

                        @type = "hidden"
                    })
                    <div class="col-sm-4">
                        <div class="form-group">
                            <div class="form-group">
                                <label for="TransferredFromPerson">Kimdən</label>
                                @Html.DropDownListFor(model => model.TransferredFromPerson,
                                    new SelectList(Model.TransferredFromPersons, "Id", "Name", Model.TransferredFromPerson), "Seç", new
                                    {
                                        @id = "TransferredFromPerson",
                                        @class = "selectpicker",
                                        @data_live_search = "true",
                                        @data_width = "100%",
                                        @data_required = ""
                                    })
                                <span>@Html.ValidationMessageFor(transfer => transfer.TransferNote)</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <div class="form-group">
                                <label for="TransferredToPersons">Kimə</label>
                                @Html.DropDownListFor(model => model.TransferredToPerson,
                                    new SelectList(Model.TransferredToPersons, "Id", "Name", Model.TransferredToPerson), "Seç", new
                                    {
                                        @id = "TransferredToPersons",
                                        @class = "selectpicker",
                                        @data_live_search = "true",
                                        @data_width = "100%",
                                        @data_required = ""
                                    })
                                <span>@Html.ValidationMessageFor(transfer => transfer.TransferNote)</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <div class="form-group">
                                <label for="TransferReason">Səbəb</label>
                                @Html.DropDownListFor(model => model.TransferReason,
                                    new SelectList(Model.TransferReasons, "Id", "Name", Model.TransferReason), "Seç", new
                                    {
                                        @id = "TransferReason",
                                        @class = "selectpicker",
                                        @data_live_search = "true",
                                        @data_width = "100%",
                                        @data_required = ""
                                    })
                                <span>@Html.ValidationMessageFor(transfer => transfer.TransferNote)</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="startDate">Başlama tarixi</label>
                            @Html.TextBoxFor(model => model.BeginDate, "{0:yyyy-MM-dd}", new
                       {
                           @id = "startDate",
                           @type = "date",
                           @class = "form-control",
                           //@value = DateTime.Now
                       })
                            <span>@Html.ValidationMessageFor(transfer => transfer.TransferNote)</span>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="endDate">Bitmə tarixi</label>
                            @Html.TextBoxFor(model => model.EndDate, "{0:yyyy-MM-dd}", new
                            {
                                @id = "endDate",
                                @type = "date",
                                @class = "form-control",
                                //@value = DateTime.Now
                            })
                            <span>@Html.ValidationMessageFor(transfer => transfer.TransferNote)</span>
                        </div>
                    </div>
                    @if(Model.AuthorityStatus != 1)
                    {
                        <div class="col-sm-2">
                            <div class="form-group">
                                <div class="form-group">
                                    <label for="TransferStatus">Status</label>
                                    @Html.DropDownListFor(model => model.AuthorityStatus,
                                        new SelectList(Model.Statuses, "Id", "Name", Model.AuthorityStatus ?? 1), new
                                        {
                                            @id = "TransferStatus",
                                            @class = "selectpicker"
                                        })
                                </div>
                            </div>
                        </div>
                    }
                    <div class="col-sm-12">
                        <div class="form-group">
                            <div class="form-group">
                                <label for="TransferNote">Qeyd</label>
                                @Html.TextBoxFor(model => model.TransferNote, new
                                {
                                    @id = "TransferNote",
                                    @class = "form-control",
                                    @data_live_search = "true",
                                    @data_width = "100%",
                                    @data_required = ""
                                })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mb-5 pb-5 mt-4">
            <div class="col-12 text-center">
                <button type="button" class="mBtn mBtn-sec mr-2" onclick="window.history.go(-1); return false;">
                    @RLang.PrevStep
                </button>
                <button id="submitForm" type="button" class="mBtn mBtn-pr next-step">
                    @RLang.Save
                </button>
            </div>
        </div>
    </div>
</form>


<script>


    //var today = new Date().toISOString().split('T')[0];
    //document.getElementById('startDate').value = today;
    //document.getElementById('endDate').value = today;

    document.getElementById("startDate").onchange = function ()
    {
        var input = document.getElementById("endDate");
        input.min = this.value;

    }

    $(document).on("click", "#submitForm",
        function (e) {
            var form = $('#authorityForm').getFormData();
            var message = "Uğurlu əməliyyat";
            console.log($('#hiddenId').val());
            $.ajax({
                url: "/@lang/AdminPanel/OrganizationStructure/@(Model.IsEdit ? "EditAuthorityTransfer" : "CreateTransferAutority")",
                type: 'POST',
                data: form,
                success: function(response) {
                    if (response) {
                        toastr.success(message);
                        setTimeout(function() {
                            window.location.href = '/@lang/AdminPanel/OrganizationStructure/AuthorityTransferIndex';
                        }, 1000);
                    }
                    else {
                        Swal.fire({
                            type: 'error',
                            title: 'Xanaların doldurulduğuna əmin olun!',
                            showConfirmButton: false,
                            timer: 1000
                        });
                    }
                },
                error: function (response) {
                },
                beforeSend: function () {
                    window.ShowLoading();
                },
                complete: function () {
                    window.CloseLoading();
                }
            });
        });
</script>