@using BLL.Common.Enums
@{
    <style>
        button,
        [type="button"],
        [type="reset"],
        [type="submit"] {
            -webkit-appearance: none !important;
        }
    </style>

    var grid = Html.MhmGrid("gridOutgoingDoc", "Document", "Document", routeValues: new {area = "OutgoingDoc", docType = 12})
        .Columns(cols =>
        {
            cols.Column(c =>
            {
                c.SetText("");
                c.SetDataField("DocId", FieldType.Number);
                c.SetHeaderAlign(TextAlign.Center).IsFilterable();
                c.SetWidth(35);
                c.IsCrud("x", "x");
                c.SetRenderer("<a><i class='line'></i><i class='line'></i><i class='line'></i></a>",
                    htmlAttributes: new {@class = "operation-button", data_toggle = "popover", data_container = "body", data_trigger = "focus", data_placement = "right", type = "button", data_html = "true", href = "#", id = "ActionName", fn_onclick = "ActionClick"});
            });

            cols.Column(c =>
            {
                c.SetText("");
                c.SetDataField("", FieldType.Number);
                c.SetHeaderAlign(TextAlign.Center);
                c.SetWidth(35);
                c.IsCrud("x", "x");
                c.SetRenderer("<a><i class='fas fa-eye'></i></a>", htmlAttributes: new {@class = "operation-button", fn_onclick = "DocView", @title = "Qeydiyyat nəzarət vərəqəsi"});
            });

            cols.Column(c =>
            {
                c.SetText("Qeydiyyat nömrəsi");
                c.SetDataField("DocEnterno");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetMaxWidth(130);
                c.IsPinned();
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Layihə nömrəsi");
                c.SetDataField("DocDocno");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetMaxWidth(130);
                c.IsPinned();
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("İmzalayan şəxs");
                c.SetDataField("Signer");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetMaxWidth(130);
                c.IsPinned();
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Mövcud status");
                c.SetDataField("DocLastOperationStatus");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(300);
                c.SetMaxWidth(400);
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Mövcud əməliyyatçı");
                c.SetDataField("DocLastOperationPerson");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(300);
                c.SetMaxWidth(400);
                c.IsFilterable();
            });
            cols.Column(c =>
            {
                c.SetText("Kimə ünvanlanıb");
                c.SetDataField("WhomAdressedCompany");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(300);
                c.SetMaxWidth(400);
                c.IsFilterable();
            });


            cols.Column(c =>
            {
                c.SetText("Göndərilən şəxs");
                c.SetDataField("WhomAdressed");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(300);
                c.SetMaxWidth(400);
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Göndərilmə  forması");
                c.SetDataField("DocFormId");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(200);
                c.SetMaxWidth(300);
                c.IsFilterable(Filtertype.CheckedList, filterItems: CacheHelper.GetFilter(DocFilter.DocFormId), filterField: "DocFormId");
            });

            cols.Column(c =>
            {
                c.SetText("Sənədin növü");
                c.SetDataField("FormId");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(100);
                c.SetMaxWidth(200);
                c.IsFilterable(Filtertype.CheckedList, filterItems: CacheHelper.GetFilter(DocFilter.FormId), filterField: "FormId");
            });
            cols.Column(c =>
            {
                c.SetText("Sənədin tarixi");
                c.SetDataField("DocDate", FieldType.Date, "dd.MM.yyyy");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(100);
                c.SetMaxWidth(200);
                c.IsFilterable(Filtertype.Date);
            });

            cols.Column(c =>
            {
                c.SetText("Sənədin statusu");
                c.SetDataField("DocumentstatusName");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(50);
                c.SetMaxWidth(130);
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Sənədin mətni");
                c.SetDataField("FileText");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(300);
                c.SetMaxWidth(400);
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Qısa məzmun");
                c.SetDataField("DocDescription");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(200);
                c.SetMaxWidth(300);
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("Sənədi yaradan");
                c.SetDataField("CreaterPersonnelName");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(100);
                c.SetMaxWidth(200);
                c.IsFilterable();
            });

            cols.Column(c =>
            {
                c.SetText("");
                c.SetDataField("ExecutorControlStatus");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(100);
                c.SetMaxWidth(200);
                c.SetHidden();
                c.IsFilterable(Filtertype.CheckedList);
            });

            cols.Column(c =>
            {
                c.SetText("Executor");
                c.SetDataField("ExecutorId");
                c.SetHeaderAlign(TextAlign.Center);
                c.SetCellsAlign(TextAlign.Left);
                c.SetMinWidth(100);
                c.SetMaxWidth(200);
                c.IsFilterable();
                c.SetHidden();
            });
        })
        .AllowCrud()
        .SetRowDoubleClick("onRowDoubleClick")
        .AllowSorting(false)
        .AllowTooltips(false)
        .AllowPaging(true)
        .AllowFiltering(true)
        .AllowFilterRow(true)
        .AllowColumnOrdering(true)
        .AllowColumnResizing(true)
        .SetOnFilter("onFilter")
        .SetUnRead("checkUnread")
        .SetPageSize(35)
        .SetWidth("100%")
        .SetHeight("100%");

}


@grid.GetHtml()