@using AzDoc.App_LocalResources
@using AzDoc.Helpers
@using OutgoingDoc.Enum
@model ElectronicDocumentViewModel
@{
    Layout = null;
    var docType = SessionHelper.DocTypeId;
    RouteData routeData = ViewContext.RouteData;

    var routeValueDictionary = new RouteValueDictionary(routeData.Values);

    var _lang = routeValueDictionary["lang"] ?? "az";

}

<style>
    .col-md-1 {
        flex: 0 0 4.333333% !important;
        width: 3.5% !important;
    }

    #sendForInformationModal {
        z-index: 1055;
    }

    .operationIcons {
        font-size: 1.7em;
    }
</style>

<div style="height: 100%">
    <div class="col-12">
        <div class="form-group">
            <div class="input-group">
                @Html.AntiForgeryToken()
                <span class="d-none" id="spanToken">@Model.Token</span>

                <div class="col-md-1">
                    <button type="button" id="DocInfoButton" class="btn btn-light btn-sm">
                        <i class="fas fa-chevron-circle-down operationIcons" style="color: #005487"></i>
                    </button>
                </div>

                <div class="col-md-1">
                    <button type="button" id="operationHistoryButton" class="btn btn-light btn-sm" title="Əməliyyat tarixçəsi">
                        <i class="fas fa-history operationIcons" style="color: #005487"></i>
                    </button>
                </div>

                <div class="col-md-5">
                    @Html.DropDownListFor(model => Model.FileInfoId,
                  new SelectList(Model.DocFiles, "FileInfoId", "FileName"), new
                  {
                      @class = "form-control",
                      @id = "JsonFile"
                  })
                </div>
                @Html.Partial("~/Views/Document/ElectronicDocumentActions.cshtml", Model.DocActions)

                @if (Model.FileSignatureStatus == 2)
                {
                    <div class="col-md-1">
                        <img src="~/Areas/Smdo/Scripts/certificateAz.svg" height="35" width="35" title="Sənəd imzalanıb" />
                    </div>
                }
            </div>

            <div class="col-12">
                <div class="form-group">
                    <div class="alert alert-light alert-dismissible" id="alertInfo">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th scope="col">Sənədin adı</th>
                                    <th scope="col">Sənədin nömrəsi</th>
                                    <th scope="col">Sənədin Tarixi</th>
                                    <td scope="col">Əməliyyatın növü</td>
                                    <td scope="col">Əməliyyatı aparan</td>
                                    <th scope="col">Sənədin qısa məzmunu</th>
                                </tr>
                            </thead>
                            <tbody>

                                <tr>
                                    <td>@Model.DocTypeName</td>
                                    @if (!string.IsNullOrWhiteSpace(Model.DocEnterNo))
                                    {
                                        <td>@Model.DocEnterNo</td>
                                        <td>@(Model.DocEnterDate.Value.ToString("d"))</td>
                                    }
                                    else
                                    {
                                        <td>@Model.DocDocNo</td>
                                        <td>@(Model.DocDocDate.Value.ToString("d"))</td>
                                    }
                                    <td>@Model.ExecuteRule</td>
                                    <td>@Model.CreaterPersonnelName</td>
                                    <td>@Model.Description</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    @Html.Partial("~/Views/DocInfo/_DocPlan.cshtml", Model.DocPlan)

                    @Html.Partial("~/Views/Document/DocumentQrCode.cshtml", Model)
                </div>
            </div>
        </div>
    </div>

    <div class="col-12" id="DocViewer">
        <div class="form-group">
            @Html.Partial("_DocumentDisplay")
        </div>
    </div>
</div>

<input type="hidden" id="signStatus" data-IsDocConfirm="@(Model.DocDocumentStatusId == (int) DocumentStatus.Signed ? "true" : "false")" />
<input type="hidden" id="fileSignStatus" data-signStatus="@Model.FileSignatureStatus" />

@Html.Partial("/Views/Modals/_CommonModal.cshtml", Model)

<div class="mModal">
    <div class="modal fade modalBtn" id="postDialogModal" tabindex="-1" role="dialog" aria-labelledby="prAddModalLabel"
         aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header"></div>
                <div class="modal-header2">
                    <span>Poçt etməyə əminsinizmi ?</span>
                </div>

                <div class="modal-body" style="max-height: 70vh;overflow-y: auto">
                    <div class="row">
                        <div class="col-12">
                            <textarea class="form-control" id="notsentNote"></textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer justify-content-center">
                    <div class="col-3">
                        <button type="button" id="notsentButton" class="mBtn mBtn-pr defaultBtn" style="width: 100%">Göndərmə</button>
                    </div>
                    <div class="col-3">
                        <button type="button" id="postButton" class="mBtn mBtn-pr defaultBtn" style="width: 100%">Göndər</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $('#fakeButton').click();

    $("#sendForInformationButton").click(function () {
        var token = $("#spanToken").html();
        SendForInformaton(token);
    });

    $(".closeBtn").click(function () {
        $(".modalBtn").modal("hide");
    });

    function RefreshGrid() {
        var nameOfObject = window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1);

        if (nameOfObject == 'UnreadDocuments') {
            var pageIndex = $('#gridDMS').CachedGrid().config.params.pageIndex;
            $('#gridDMS').bindgrid(pageIndex, undefined);
            $('.modal').modal('hide');
        }
        else {
            var pageIndex = $('#gridOutgoingDoc').CachedGrid().config.params.pageIndex;
            $('#gridOutgoingDoc').bindgrid(pageIndex, undefined);
            $('.modal').modal('hide');
        }
    }

    $("#postButton").click(function () {
        var requestToken = $("#spanToken").text();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("ActionOperation", "Document", new { area = "OutgoingDoc", lang =_lang })'.buildUrl({ token: requestToken }),
            beforeSend: function() {
                window.ShowLoading();
            },
            dataType: 'json',
            data: { actionId : @((int)ActionType.Post),description: $('#acceptNote').val()},
            success: function (actionOperation) {
                if (actionOperation==@((int)ActionType.Post)) {
                    var nameOfObject = window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1);

                    if (nameOfObject == 'UnreadDocuments') {
                        var pageIndex = $('#gridDMS').CachedGrid().config.params.pageIndex;
                        $('#gridDMS').bindgrid(pageIndex, undefined);
                        $('#postDialogModal').modal('hide');
                        $('#doubleClickModal').modal('hide');
                    }
                    else {
                        var pageIndex = $('#gridOutgoingDoc').CachedGrid().config.params.pageIndex;
                        $('#gridOutgoingDoc').bindgrid(pageIndex, undefined);
                        $('#postDialogModal').modal('hide');
                        $('#doubleClickModal').modal('hide');
                    }
                }
            },
            complete: function () {
                window.CloseLoading();
            }
        });
    });

    $("#notsentButton").click(function () {

        var description = $("#notsentNote").val();

        if (description == '') {
            toastr.warning('Qeydinizi daxil edin.');
            return;
        }
        var requestToken = $("#spanToken").text();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("ActionOperation", "Document", new { area = "OutgoingDoc", lang =_lang })'.buildUrl({ token: requestToken }),
            beforeSend: function() {
                window.ShowLoading();
            },
            dataType: 'json',
            data: { actionId: @((int)ActionType.NotSent), description: description},
            success: function (actionOperation) {
                if (actionOperation==@((int)ActionType.NotSent)) {
                    var nameOfObject = window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1);

                    if (nameOfObject == 'UnreadDocuments') {
                        var pageIndex = $('#gridDMS').CachedGrid().config.params.pageIndex;
                        $('#gridDMS').bindgrid(pageIndex, undefined);
                        $('#postDialogModal').modal('hide');
                        $('#doubleClickModal').modal('hide');
                    }
                    else {
                        var pageIndex = $('#gridOutgoingDoc').CachedGrid().config.params.pageIndex;
                        $('#gridOutgoingDoc').bindgrid(pageIndex, undefined);
                        $('#postDialogModal').modal('hide');
                        $('#doubleClickModal').modal('hide');
                    }
                }
            },
            complete: function () {
                window.CloseLoading();
            }
        });
    });

    //$(".closeBtn").click(function () {
    //    $(".modalBtn").modal("hide");

    //});

    $(document).ready(function () {
        $(".alert").hide();

        $('#DocInfoButton').on("click",function() {
            $("#alertOperationHistory").hide();
            $("#alertTask").hide();
            if ($("#alertInfo").css("display") == "none")
            {
                $("#alertInfo").show('medium');
            }
            else
            {
                $("#alertInfo").hide();
            }
        });

        $('#operationHistoryButton').on("click",function() {
            $("#alertInfo").hide();
            if ($("#alertOperationHistory").css("display") == "none")
            {
                $("#alertOperationHistory").show('medium');

            }
            else {
                $("#alertOperationHistory").hide();
            }
        });

        $(".close").click(function () {
            $(".alert").hide();
        });

        $("#JsonFile").change(function () {
            var id = $(this).val();
            $.ajax({
                type: 'GET',
                url: '/@_lang/outgoing/Document/DocumentDisplay',
                dataType: 'html',
                data: { docInfoId: id},
                success: function (response) {
                    $("#DocViewer").html(response);
                }
            });
        });
    });
</script>