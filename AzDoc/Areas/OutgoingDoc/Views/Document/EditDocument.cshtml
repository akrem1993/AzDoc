@using OutgoingDoc.Enum
@{
    ViewBag.Title = "EditDocument";
    Layout = "~/Views/Shared/_LeftMenuLayout.cshtml";

    int docType = SessionHelper.DocTypeId;

    RouteData routeData = ViewContext.RouteData;

    var routeValueDictionary = new RouteValueDictionary(routeData.Values);

    var _lang = routeValueDictionary["lang"] ?? "az";
}

<link href="~/Content/common/style.css" rel="stylesheet" />
<link href="~/Content/common/md-form-design.css" rel="stylesheet" />
<style>
    .bootstrap-select .dropdown-menu {
        max-width: 100% !important;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }

    /*.container-fluid {
        font-size: 80% !important;
    }*/

    .card-header-custom {
        background-color: #5c91af !important;
        padding: 0.4em 1.25rem !important;
    }
</style>

<div class="col-12">
    <div class="row breadCrumbRow mt-5">
        <div class="col-6 text-center" id="basicInformation">
            <a href="#step1" class="brActive" data-brcrumb="1">
                @RLang.BasicInfo
            </a>
        </div>
        <div class="col-6 text-center" id="attachmentDocuments">
            <a href="#step3" data-brcrumb="3">@RLang.EDocuments</a>
        </div>
    </div>
</div>

@using (Html.BeginForm("EditDocument", "Document", FormMethod.Post, new { id = "EditDocument" }))
{
    @Html.AntiForgeryToken()

    <div class="col-12 mainContent">
        <div class="mainEdit contentItem" id="step1" style="padding-top:1px" data-brnum="1">
            @Html.Partial("_BasicInformationPartial")
        </div>
        <div class="connectDoc contentItem d-none" id="step3" style="padding-top:1px" data-brnum="3">
            @Html.Partial("~/Views/Document/AttachmentDocumentsPartial.cshtml")
        </div>
    </div>
}

@section scripts{

    <script>
    var config = {
        getAuthorInfo: {
            url: '@Url.Action("GetAuthorInfo", "Document", new { area = "OutgoingDoc", lang = "az" })'
        },
        addNewDocument: {
            url: '@Url.Action("EditDocument", "Document", new { area = "OutgoingDoc", lang =_lang})',
            data: { docType:  @docType }
        }
    };
    </script>
    <script src="~/Scripts/outgoingdoc/form-wizard.js?v=@AppVersion.Version"></script>
    <script src="~/Scripts/common/sweetalert.min.js?v=@AppVersion.Version"></script>
    <script src="~/Scripts/common/AttachmentFile.js?v=@AppVersion.Version"></script>
    <script src="~/Scripts/outgoingdoc/outgoingdoc.js?v=@AppVersion.Version"></script>

    <script>

        $('#fakeButton').click();

        function deleteRowAuthor(adrId,element) {

            Swal.fire({
                title: 'Bu sətir cədvəldən silinəcək',
                type: 'warning',
                showCancelButton: true,
                cancelButtonText: 'Ləğv et',
                confirmButtonText: 'Təsdiqlə'
            }).then((result) => {
                if (result.value) {
                        $.ajax({
                            type: 'POST',
                            url:'@Url.Action("DeleteDocument", "Document", new { area = "OutgoingDoc", lang =_lang })',
                            dataType: 'html',
                            data: { rowId: adrId, formTypeId: 0, docType: @SessionHelper.DocTypeId },
                            success: function (result) {
                                console.log(result);
                                if (result == @((int)Result.Success)) {
                                    $(element).parents("tr").remove();
                                    var rowCountAuthor = $('#dataTableOrgAuthor').find('.data-row').length;
                                    if (rowCountAuthor === 0) {
                                        $('#dataTableOrgAuthor').hide();
                                        $("#labelForAddNewAuthorModal").css("display") === "block"
                                            ? $("#labelForAddNewAuthorModal").hide()
                                            : "";
                                        $('#searchAuthor').closest('div').find('.es-list').empty();
                                        $('#searchAuthor').val("");
                                    }
                                    toastr.success('Məlumat silindi');
                                }
                            },
                            fail: function(response) {
                                console.log(response);
                            }
                        });
                }
            });

        };

        function deleteRowRelated(relatedId,element) {

            Swal.fire({
                title: 'Bu sətir cədvəldən silinəcək',
                type: 'warning',
                showCancelButton: true,
                cancelButtonText: 'Ləğv et',
                confirmButtonText: 'Təsdiqlə'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                            type: 'POST',
                            url:'@Url.Action("DeleteDocument", "Document", new { area = "OutgoingDoc", lang =_lang })',
                            //dataType: 'json',
                            data: { rowId: relatedId,formTypeId: 1, docType: 12  },
                            success: function (result) {
                                if (result == @((int)Result.Success)) {

                                    var answerDocId = $(element).parents("tr").attr('data-docid'); // daxil olan sened
                                    DeleteJointExecutors(answerDocId); // vizalardan musterek icracilarin silinmesi

                                    console.log($("#relatedDocTable").find(".data-row").length);
                                    $(element).parents("tr").remove();
                                    $("#answerDocTable").find(".data-row").length === 0
                                        ? $("#answerDocTable").hide()
                                        : $("#answerDocTable").show();
                                    $("#relatedDocTable").find(".data-row").length === 0
                                        ? $("#relatedDocTable").hide()
                                        : $("#relatedDocTable").show();
                                    toastr.success('Məlumat silindi');
                                }
                            }
                        });
                }
             });
        };

        $("#ParentButton").click(function () {

            var isMainCount = 0;
            var pageCopyCount = 0;

            $.each($("input[name='isMain']"),
                function() {
                    if ($(this).attr('checked') === 'checked') {
                        ++isMainCount;
                    }
                });
            console.log("error1");
            $.each($("i[name='icon']"),
                function() {
                    if ($.trim($(this).text()) === "") {
                        $(this).closest("span").css('border', '1px solid red');
                        ++pageCopyCount;
                    }
                });
            console.log("error2");
            if (isMainCount === 0) {
                $.each($("input[name='isMain']"),
                    function() {
                        $(this.parentElement).css('border', 'solid red 1px');
                    });
                toastr.warning("Bütün məcburi xanaların doldurulduğuna əmin olun.");
            }

            if (isMainCount !== 0 && pageCopyCount === 0) {

                if (vizaPersonList.length == 0)
                    return toastr.warning("Sənədin vizaları təyin olunmayıb.");

                var formData = $('#EditDocument').getFormData();
                console.log(formData);

                formData.WhomAddressModels = $('#tbWhomAddress').tableToJsonList();
                formData.RelatedDocModels = $('#relatedDocTable').tableToJsonList();
                formData.AuthorModels = $('#dataTableOrgAuthor').tableToJsonList();
                formData.AnswerByOutDocModels = $('#answerDocTable').tableToJsonList();
                formData.VizaDataJson = JSON.stringify(vizaPersonList);

                var typeOfDocument = $('#TypeOfDocument').val();
                console.log(typeOfDocument);
                if (typeOfDocument == 12) {
                    formData.TaskFormModels = $('#tb').tableToJsonList();
                    console.log(formData.TaskFormModels);
                }
                console.log("error5");
                var searchParams = new URLSearchParams(window.location.search);
                var requestToken = searchParams.get('token');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("EditDocument", "Document", new { area = "OutgoingDoc", lang = _lang })'.buildUrl({token: requestToken}) ,
                    dataType: 'json',
                    data: { model: formData, docType:  @docType },
                    success: function(response) {
                        window.ShowLoading();
                        if (response.result == 'true')
                            window.location = response.url;
                    },
                    fail: function(response) {
                        console.log(response);
                    }
                });

            }
        });

        $(document).ready(function () {
            var today = new Date().toISOString().split('T')[0];
            document.getElementsByName("DocumentModel.DocEnterDate")[0].setAttribute('min', today);
            document.getElementsByName("DocumentModel.PlannedDate")[0].setAttribute('min', today);
        });
    </script>
}